import Head from "next/head";

import styles from "../styles/Home.module.css";
import { useEffect, useState, useRef } from "react";
import main from "../back-end/sendEth";
import Web3Modal from "web3modal";
import { ethers } from "ethers";

import data from "../back-end/hisTx";
// import WalletConnectProvider from "@walletconnect/ethereum-provider";

export default function Home() {
  
  const send = async () =>{
     main(account)
    setSay("Wait for 10 second and see your wallet")
    
  }

  const readData = async () => {
    // const contract = test();
    // const message =await contract.methods.get().call()
    const dataTx = await data();
    console.log(dataTx);
  };
  const [sayShow,setSay] = useState("");
  
  const [provider, setProvider] = useState();
  const [library, setLibrary] = useState();
  const [account, setAccount] = useState("");
  const [show, setShow] = useState(true);

  const connectWallet = async () => {
    try {
      let web3Modal = new Web3Modal({
        cacheProvider: false,
      });
      const provider = await web3Modal.connect();
      const library = new ethers.providers.Web3Provider(provider);
      const accounts = await library.listAccounts();

      setProvider(provider);
      setLibrary(library);
      if (accounts) setAccount(accounts[0]);
    } catch (error) {
      console.log("Error");
    }
    console.log(account);
  };

  useEffect(()=>{
    console.log("TEST");

  },[sayShow])

  useEffect(() => {
    if (account != "") {
      setShow(false)
    }
  }, [account]);

  useEffect(() => {
    if (provider?.on) {
      const handleAccountsChanged = (accounts) => {
        console.log("accountsChanged", accounts);
        if (accounts) setAccount(accounts[0]);
      };

      provider.on("accountsChanged", handleAccountsChanged);

      return () => {
        if (provider.removeListener) {
          provider.removeListener("accountsChanged", handleAccountsChanged);
        }
      };
    }
  }, [provider]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Faucet ETH GOERLI Testnet
        </h1>
        Send 0.005eth per round
        
        {show ? (
          <button onClick={connectWallet}>Connect wellet</button>
        ) : (
          <>
            <h4>Your wallet address: {account}</h4>
            {/* <input ref={inputRef} type="text" id="message" name="message" /> */}
            <button onClick={send}>Send Me</button>
            <h4>{sayShow}</h4>
          </>
        
        )}
        

        <div className={styles.grid}></div>
      </main>
    </div>
  );
}

